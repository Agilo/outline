# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
        
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        ports:
          - 5432:5432
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: outline_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      s3:
        image: lphoward/fake-s3
        ports:
          - 4569:4569
      redis:
        # Docker Hub image
        image: redis
        ports:
          - 6379:6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    env:
      # The hostname used to communicate with the PostgreSQL service container
      POSTGRES_HOST: postgres
      # The default PostgreSQL port
      POSTGRES_PORT: 5432
      NODE_ENV: test
      SECRET_KEY: F0E5AD933D7F6FD8F4DBB3E038C501C052DC0593C686D21ACB30AE205D2F634B
      DATABASE_URL_TEST: postgres://postgres:postgres@localhost:5432/outline_test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/outline_test
      REDIS_URL: redis://localhost:6379
      URL: http://localhost:3000
      SMTP_FROM_EMAIL: hello@example.com
      AWS_S3_UPLOAD_BUCKET_URL: http://s3:4569
      AWS_S3_UPLOAD_BUCKET_NAME: s3-bucket-name

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn install --pure-lockfile
    - run: yarn sequelize:migrate
    - run: yarn test
    - run: yarn lint
    - run: yarn flow
